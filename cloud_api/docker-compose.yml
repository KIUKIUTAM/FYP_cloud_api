services:
  nginx:
    build:
      context: ./source
      dockerfile: nginx/Dockerfile
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "80:80"
      - "8088:8088"
    volumes:
      - ./source/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./source/php/src/fyp_frontend:/var/www/html:ro
      - ./source/vue_front_page:/home/vue_front_page:ro
    depends_on:
      - php
      - python
      - cloud_api_sample
    networks:
      - cloud_service_bridge
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  php:
    build: ./source/php
    image: php:8.1-fpm
    container_name: php
    volumes:
      - ./source/php/src/fyp_frontend:/var/www/html:rw
      - ./source/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:ro
    working_dir: /var/www/html
    environment:
      - DB_HOST=cloud_api_sample_mysql
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=cloud_api
      - COMPOSER_MEMORY_LIMIT=-1
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=ROOTUSER
      - MINIO_SECRET_KEY=CHANGEME123
      - MINIO_CONSOLE=http://minio:9001
    networks:
      - cloud_service_bridge
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "php-fpm", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  composer:
    image: composer:2
    container_name: composer
    volumes:
      - ./source/php/src:/app:rw
    working_dir: /app
    networks:
      - cloud_service_bridge
    environment:
      - COMPOSER_MEMORY_LIMIT=-1
    command: ["composer", "install", "--no-dev", "--optimize-autoloader"]

  python:
    build: ./source/python
    container_name: python
    ports:
      - "8000:8000"
    volumes:
      - ./source/python/app:/app:rw
    networks:
      - cloud_service_bridge
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  cloud_api_sample:
    build: ./source/backend_service
    image: dji/cloud_api_sample
    container_name: cloud_api_sample
    depends_on:
      mysql:
        condition: service_healthy
      emqx:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_started
    ports:
      - "6789:6789"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://cloud_api_sample_mysql:3306/cloud_api?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
      - SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT=30000
      - SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE=10
      - SPRING_DATASOURCE_HIKARI_MAX_LIFETIME=1800000
      - SPRING_INTEGRATION_MQTT_SERVER_URIS=tcp://emqx-broker:1883
    hostname: cloud_api_sample
    restart: unless-stopped
    networks:
      - cloud_service_bridge
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6789/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: ["sh", "-c", "sleep 150 && java -jar /app.jar"]
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  emqx:
    image: emqx:4.4
    container_name: emqx
    ports:
      - "18083:18083"
      - "1883:1883"
      - "8083:8083"
      - "8883:8883"
      - "8084:8084"
    environment:
      - EMQX_ALLOW_ANONYMOUS=true
      - EMQX_NODE_NAME=emqx@node1
      - EMQX_NODE_COOKIE=emqx_secret_cookie
    hostname: emqx-broker
    networks:
      - cloud_service_bridge
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:18083"]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  mysql:
    image: mysql:8.0
    container_name: cloud_api_sample_mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=cloud_api
      - MYSQL_USER=djiuser
      - MYSQL_PASSWORD=djipassword
    volumes:
      - mysql_data:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    networks:
      - cloud_service_bridge
    hostname: cloud_api_sample_mysql
    ports:
      - "3306:3306"
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 180s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: unless-stopped
    hostname: cloud_api_sample_redis
    ports:
      - "6379:6379"
    networks:
      - cloud_service_bridge
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  minio:
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - D:/minio/data:/data
    environment:
      - MINIO_ROOT_USER=ROOTUSER
      - MINIO_ROOT_PASSWORD=CHANGEME123
    command: server /data --console-address ":9001"
    networks:
      - cloud_service_bridge
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  cloud_service_bridge:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.6.0/24