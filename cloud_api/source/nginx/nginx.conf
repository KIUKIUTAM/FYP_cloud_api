user root;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    use epoll;
    worker_connections 2048;
    multi_accept on;
}

http {
    include mime.types;
    default_type application/octet-stream;

    # Optimization for web performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    server_tokens off;

    # Buffer size for POST submissions
    client_body_buffer_size 100M;
    client_max_body_size 100M;
    client_body_timeout 300s;
    client_header_timeout 60s;

    # Gzip Settings
    gzip on;
    gzip_comp_level 6;
    gzip_min_length 1k;
    gzip_buffers 4 8k;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript application/x-javascript;
    gzip_vary on;

    # Logging format
    log_format main '{'
        '"@level": "info",'
        '"@remote": "$remote_addr",'
        '"@forwarded": "$http_x_forwarded_for",'
        '"@server": "$server_addr",'
        '"@hostname": "$host",'
        '"@timestamp": "$time_iso8601",'
        '"@spend":"$request_time",'
        '"@request": {'
            '"@protocol": "$scheme",'
            '"@host": "$host",'
            '"@path": "$request",'
            '"@header": {'
                '"@User-Agent": "$http_user_agent"'
            '}'
        '},'
        '"@response": {'
            '"@statusCode": "$status"'
        '}'
    '}';

    # Basic settings
    fastcgi_intercept_errors on;
    server_names_hash_max_size 4096;
    proxy_headers_hash_max_size 512;
    proxy_headers_hash_bucket_size 128;

    # Backend server (PHP/Python) - Port 80
    server {
        listen 80;
        server_name localhost;

        root /var/www/html;
        index index.php index.html;

        # 输出调试信息
        error_log /var/log/nginx/error.log debug;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";

        # 最简洁明了的静态文件配置
        location /assets {
            alias /var/www/html/assets;
        }
        
        # Handle PHP files
        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass php:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_intercept_errors on;
            fastcgi_buffer_size 128k;
            fastcgi_buffers 4 256k;
            fastcgi_busy_buffers_size 256k;
        }

        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # Frontend server (Vue.js) - Port 8088
    server {
        listen 8088;
        server_name "";

        error_log /var/log/nginx/error.log;
        access_log /var/log/nginx/access.log main;

        root /home/vue_server/;
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";

        location / {
            try_files $uri $uri/ /index.html;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Enable caching for static files
            expires 1d;
            add_header Cache-Control "public, no-transform";
        }

        # API proxy if needed
        location /api {
            proxy_pass http://localhost:80;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}